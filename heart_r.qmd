---
title: "Heart"
format: html
editor: visual
Autor: "Navarro Daniel"
date: "2025-Apr-12"
toc: true
---

```{r knitr setup, include=FALSE}
knitr::opts_chunk$set(
	fig.align = "center",
	message = FALSE,
	warning = FALSE,
	out.width = "70%"
)
```

```{r libraries load, include=FALSE}
if (!require(DT)) install.packages("DT")
if (! require(shiny)) install.packages("shiny")
if (!require(tidyverse)) install.packages("tidyverse")
```

## Introduction

The present notebook's goal is to analyze the "Heart Failure Prediction" dataset.

Data from Kaggle: <https://www.kaggle.com/datasets/fedesoriano/heart-failure-prediction>.

## Context

Context

Cardiovascular diseases (CVDs) are the number 1 cause of death globally, taking an estimated 17.9 million lives each year, which accounts for 31% of all deaths worldwide. Four out of 5CVD deaths are due to heart attacks and strokes, and one-third of these deaths occur prematurely in people under 70 years of age. Heart failure is a common event caused by CVDs and this dataset contains 11 features that can be used to predict a possible heart disease.

People with cardiovascular disease or who are at high cardiovascular risk (due to the presence of one or more risk factors such as hypertension, diabetes, hyperlipidaemia or already established disease) need early detection and management wherein a machine learning model can be of great help. Attribute Information

```         
Age: age of the patient [years]
Sex: sex of the patient [M: Male, F: Female]
ChestPainType: chest pain type [TA: Typical Angina, ATA: Atypical Angina, NAP: Non-Anginal Pain, ASY: Asymptomatic]
RestingBP: resting blood pressure [mm Hg]
Cholesterol: serum cholesterol [mm/dl]
FastingBS: fasting blood sugar [1: if FastingBS > 120 mg/dl, 0: otherwise]
RestingECG: resting electrocardiogram results [Normal: Normal, ST: having ST-T wave abnormality (T wave inversions and/or ST elevation or depression of > 0.05 mV), LVH: showing probable or definite left ventricular hypertrophy by Estes' criteria]
MaxHR: maximum heart rate achieved [Numeric value between 60 and 202]
ExerciseAngina: exercise-induced angina [Y: Yes, N: No]
Oldpeak: oldpeak = ST [Numeric value measured in depression]
ST_Slope: the slope of the peak exercise ST segment [Up: upsloping, Flat: flat, Down: downsloping]
HeartDisease: output class [1: heart disease, 0: Normal]
```

## Data load and first checks

```{r data load and first checks, echo=FALSE}
raw_data <- read_csv("./data/heart.csv")
```

Checking the individuals Age and Sex in the data set, we have ages in the range from 28 to 77 years with a fairly normal distribution as the similar mean and median show:

```{r raw_data Age summary, echo=FALSE}
summary(raw_data$Age)
```

Checking the distribution of ages we have an uneven distribution of `r sum(raw_data$Sex == "F")` female individuals and `r sum(raw_data$Sex == "M")`:

```{r raw_data Sex summary, echo=FALSE}
summary(as.factor(raw_data$Sex))
```

Checking all the medical and health related data we can see there are not missing data elements:

```{r Medical and health related data, echo=FALSE}
summary(raw_data[ , 3:11])
```

Finally the heart health condition is classified as 0 for healthy individuals and 1 for heart disease, distributed as below:

```{r Heart health conditions, echo=FALSE}
summary(as.factor(raw_data$HeartDisease))
```

Before proceeding to visualize the data we can browse all the dataset:

```{r All data table, echo=FALSE}

options(DT.options = list(
  bPaginate = TRUE, 
  dom = "ifrt", 
  language = list(info = "Showing _TOTAL_ entries")
))

DT::datatable(raw_data)
```

## Data visualization

As indicated age distribution is normal with a mean age of 54 years old.

```{r histogram of age distribution, echo=FALSE}
hist(raw_data$Age)
```

Sex distribution of the sample is, on the other hand, a bit dissimilar.

```{r bars of sex distribution, echo = FALSE}
barplot(table(raw_data$Sex))
```

<!-- ## Running Code -->

<!-- When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this: -->

<!-- ```{r} -->
<!-- 1 + 1 -->
<!-- ``` -->

<!-- You can add options to executable code like this -->

<!-- ```{r} -->
<!-- #| echo: false -->
<!-- 2 * 2 -->
<!-- ``` -->

<!-- The `echo: false` option disables the printing of code (only output is displayed). -->
